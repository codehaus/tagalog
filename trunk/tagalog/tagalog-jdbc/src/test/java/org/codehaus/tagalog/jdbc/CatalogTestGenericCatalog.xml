<?xml version="1.0"?>

<catalog>

  <!-- Make sure everything's in a safe state -
       old tables deleted and such like
    -->

  <proc name="set-up">
    <stmt>drop table catalog_test</stmt>
    <stmt>drop table bind_test</stmt>
  </proc>

  <proc name="query-no-table">
    <dialect-choice>
	    <query rows="one" dialect="mysql">select 42 result</query>
	    <query rows="one" dialect="oracle">select 42 result from dual</query>
    </dialect-choice>
  </proc>

	<!-- Test statements that operate on a simple (id, name) table.
	     All these statements have names that begin with the string 'ttq'.
	  -->

  <proc name="ttq-create-table">
    <stmt>
      create table catalog_test (
      	id		integer not null primary key,
      	name  char varying(20) not null
      )
    </stmt>
  </proc>

  <proc name="ttq-drop-table">
    <stmt>drop table catalog_test</stmt>
  </proc>

	<proc name="ttq-create-data">
	  <stmt>insert into catalog_test values (1, 'mhw')</stmt>
	  <stmt>insert into catalog_test values (2, 'fred')</stmt>
	  <stmt>insert into catalog_test values (42, 'answer')</stmt>
	</proc>

	<!-- queries for zero rows -->

	<proc name="ttq-q-no-rows-get-zero">
	  <query rows="zero">
	    select id, name from catalog_test where id = 100
	  </query>
	</proc>

	<proc name="ttq-q-no-rows-get-one">
	  <query rows="zero">
	    select id, name from catalog_test where id = 1
	  </query>
	</proc>

	<proc name="ttq-q-no-rows-get-many">
	  <query rows="zero">
	    select id, name from catalog_test
	  </query>
	</proc>

  <!-- queries for zero or one row -->

	<proc name="ttq-q-zero-or-one-rows-get-zero">
	  <query rows="zero-or-one">
	    select id, name from catalog_test where id = 100
	  </query>
	</proc>

	<proc name="ttq-q-zero-or-one-rows-get-one">
	  <query rows="zero-or-one">
	    select id, name from catalog_test where id = 1
	  </query>
	</proc>

	<proc name="ttq-q-zero-or-one-rows-get-many">
	  <query rows="zero-or-one">
	    select id, name from catalog_test order by id
	  </query>
	</proc>

  <!-- queries for one row -->

	<proc name="ttq-q-one-row-get-zero">
	  <query rows="one">
	    select id, name from catalog_test where id = 100
	  </query>
	</proc>

	<proc name="ttq-q-one-row-get-one">
	  <query rows="one">
	    select id, name from catalog_test where id = 1
	  </query>
	</proc>

	<proc name="ttq-q-one-row-get-many">
	  <query rows="one">
	    select id, name from catalog_test order by id
	  </query>
	</proc>

  <!-- queries for one or more rows -->

	<proc name="ttq-q-one-or-more-rows-get-zero">
	  <query rows="one-or-more">
	    select id, name from catalog_test where id = 100
	  </query>
	</proc>

	<proc name="ttq-q-one-or-more-rows-get-one">
	  <query rows="one-or-more">
	    select id, name from catalog_test where id = 1
	  </query>
	</proc>

	<proc name="ttq-q-one-or-more-rows-get-many">
	  <query rows="one-or-more">
	    select id, name from catalog_test order by id
	  </query>
	</proc>

  <!-- queries for zero or more rows -->

	<proc name="ttq-q-zero-or-more-rows-get-zero">
	  <query rows="zero-or-more">
	    select id, name from catalog_test where id = 100
	  </query>
	</proc>

	<proc name="ttq-q-zero-or-more-rows-get-one">
	  <query rows="zero-or-more">
	    select id, name from catalog_test where id = 1
	  </query>
	</proc>

	<proc name="ttq-q-zero-or-more-rows-get-many">
	  <query rows="zero-or-more">
	    select id, name from catalog_test order by id
	  </query>
	</proc>

  <!-- queries with bind variables -->

	<proc name="ttq-q-by-id">
	  <query>
	    select id, name from catalog_test where id = ?{id}
	  </query>
	</proc>

	<proc name="ttq-q-by-name">
	  <query>
	    select id, name from catalog_test where name = ?{name}
	  </query>
	</proc>

	<proc name="ttq-q-generic">
	  <query>
	    select id, name from ${table} where ${column} = ?{value}
	  </query>
	</proc>

	<!-- Test statements that use bind variables, using a table with more
	     columns.
	  -->

  <proc name="tbind-create-table">
    <stmt>
      create table bind_test (
      	id    integer not null primary key,
      	a     char varying(20) not null,
      	b     char varying(20) not null,
      	c     char varying(20) not null,
      	d     char varying(20) not null,
      	e     char varying(20) not null
      )
    </stmt>
  </proc>

  <proc name="tbind-drop-table">
    <stmt>drop table bind_test</stmt>
  </proc>

	<proc name="tbind-insert">
	  <stmt>
	    insert into bind_test (id, a, b, c, d, e)
	    values (?{id}, ?{rod}, ?{jane}, ?{freddy}, ?{zippy}, ?{bungle})
	  </stmt>
	</proc>

	<proc name="tbind-query">
	  <query rows="one">
	    select id, a, b, c, d, e from bind_test where id = ?{id}
	  </query>
	</proc>

</catalog>
